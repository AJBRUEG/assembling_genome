#left_join x and in_layout_chart by id
tempdf <- left_join(x=x,y=in_layout_tests,by="id")
#return tempdf
return(tempdf)
})
View(a2_tests)
#convert lists to big dataframe
a3_charts <- bind_rows(a2_charts)
View(a3_charts)
a3_tests <- bind_rows(a2_tests)
head(a3_charts)
#get the RGB values for the values in a3_charts & then summarize
test <- a3_chart %>%
#add # to values
dplyr::mutate(V1=paste0("#",V1)) %>%
#get red, green, and blue values
dplyr::rowwise() %>%
dplyr::mutate(red=col2rgb(V1)[1],
green=col2rgb(V1)[2],
blue=col2rgb(V1)[3]) %>%
dplyr::group_by(Material,Unit,Value) %>%
dplyr::summarize(red=median(red),
green=median(green),
blue=median(blue))
#get the RGB values for the values in a3_charts & then summarize
test <- a3_charts %>%
#add # to values
dplyr::mutate(V1=paste0("#",V1)) %>%
#get red, green, and blue values
dplyr::rowwise() %>%
dplyr::mutate(red=col2rgb(V1)[1],
green=col2rgb(V1)[2],
blue=col2rgb(V1)[3]) %>%
dplyr::group_by(Material,Unit,Value) %>%
dplyr::summarize(red=median(red),
green=median(green),
blue=median(blue))
head(a3_charts)
head(test)
#get the RGB values for the values in a3_charts & then summarize
a3_charts <- a3_charts %>%
#add # to values
dplyr::mutate(V1=paste0("#",V1)) %>%
#get red, green, and blue values
dplyr::rowwise() %>%
dplyr::mutate(red=col2rgb(V1)[1],
green=col2rgb(V1)[2],
blue=col2rgb(V1)[3]) %>%
dplyr::group_by(Material,Unit,Value) %>%
dplyr::summarize(red=median(red),
green=median(green),
blue=median(blue))
head(a3_charts)
head(a3_tests)
#get the RGB values for the values in a3_tests
a3_tests <- a3_tests %>%
#add # to values
dplyr::mutate(V1=paste0("#",V1)) %>%
#get red, green, and blue values
dplyr::rowwise() %>%
dplyr::mutate(red=col2rgb(V1)[1],
green=col2rgb(V1)[2],
blue=col2rgb(V1)[3]) %>%
#reorder
dplyr::select(file,Material,Unit,red,green,blue)
head(a3_tests)
a3_tests <- bind_rows(a2_tests)
#get the RGB values for the values in a3_tests
test <- a3_tests %>%
#add # to values
dplyr::mutate(V1=paste0("#",V1)) %>%
#get red, green, and blue values
dplyr::rowwise() %>%
dplyr::mutate(red=col2rgb(V1)[1],
green=col2rgb(V1)[2],
blue=col2rgb(V1)[3]) %>%
#split the file into "source","day", and "strip"
dplyr::mutate(source=gsub("_s.*","",file)) %>%
dplyr::mutate(source=gsub(".*_","",source)) %>%
dplyr::mutate(day=gsub("_.*","",file)) %>%
dplyr::mutate(day=as.numeric(gsub("day","",day))) %>%
dplyr::mutate(strip=gsub(".*_","",source)) %>%
dplyr::mutate(strip=as.numeric(gsub(".txt","",strip))) %>%
dplyr::mutate(rep=day+strip)
#get the RGB values for the values in a3_tests
test <- a3_tests %>%
#add # to values
dplyr::mutate(V1=paste0("#",V1)) %>%
#get red, green, and blue values
dplyr::rowwise() %>%
dplyr::mutate(red=col2rgb(V1)[1],
green=col2rgb(V1)[2],
blue=col2rgb(V1)[3]) %>%
#split the file into "source","day", and "strip"
dplyr::mutate(source=gsub("_s.*","",file)) %>%
dplyr::mutate(source=gsub(".*_","",source)) %>%
dplyr::mutate(day=gsub("_.*","",file)) %>%
dplyr::mutate(day=as.numeric(gsub("day","",day))) %>%
dplyr::mutate(strip=gsub(".*_","",source))
head(test)
unique(test$day)
head(a3_tests)
#get the RGB values for the values in a3_tests
test <- a3_tests %>%
#add # to values
dplyr::mutate(V1=paste0("#",V1)) %>%
#get red, green, and blue values
dplyr::rowwise() %>%
dplyr::mutate(red=col2rgb(V1)[1],
green=col2rgb(V1)[2],
blue=col2rgb(V1)[3]) %>%
#split the file into "source","day", and "strip"
dplyr::mutate(source=gsub("_s.*","",file)) %>%
dplyr::mutate(source=gsub(".*_","",source)) %>%
dplyr::mutate(day=gsub("_.*","",file)) %>%
dplyr::mutate(day=as.numeric(gsub("day","",day))) %>%
dplyr::mutate(strip=gsub(".*_","",file)) %>%
dplyr::mutate(strip=as.numeric(gsub(".txt","",strip))) %>%
dplyr::mutate(rep=day+strip)
#get the RGB values for the values in a3_tests
test <- a3_tests %>%
#add # to values
dplyr::mutate(V1=paste0("#",V1)) %>%
#get red, green, and blue values
dplyr::rowwise() %>%
dplyr::mutate(red=col2rgb(V1)[1],
green=col2rgb(V1)[2],
blue=col2rgb(V1)[3]) %>%
#split the file into "source","day", and "strip"
dplyr::mutate(source=gsub("_s.*","",file)) %>%
dplyr::mutate(source=gsub(".*_","",source)) %>%
dplyr::mutate(day=gsub("_.*","",file)) %>%
dplyr::mutate(day=as.numeric(gsub("day","",day))) %>%
dplyr::mutate(strip=gsub(".*_","",file))
head(test)
#get the RGB values for the values in a3_tests
test <- a3_tests %>%
#add # to values
dplyr::mutate(V1=paste0("#",V1)) %>%
#get red, green, and blue values
dplyr::rowwise() %>%
dplyr::mutate(red=col2rgb(V1)[1],
green=col2rgb(V1)[2],
blue=col2rgb(V1)[3]) %>%
#split the file into "source","day", and "strip"
dplyr::mutate(source=gsub("_s.*","",file)) %>%
dplyr::mutate(source=gsub(".*_","",source)) %>%
dplyr::mutate(day=gsub("_.*","",file)) %>%
dplyr::mutate(day=as.numeric(gsub("day","",day))) %>%
dplyr::mutate(strip=gsub(".*_","",file)) %>%
dplyr::mutate(strip=gsub("strip","",strip)) %>%
dplyr::mutate(strip=as.numeric(gsub(".txt","",strip))) %>%
dplyr::mutate(rep=day+strip)
head(test)
#get the RGB values for the values in a3_tests
test <- a3_tests %>%
#add # to values
dplyr::mutate(V1=paste0("#",V1)) %>%
#get red, green, and blue values
dplyr::rowwise() %>%
dplyr::mutate(red=col2rgb(V1)[1],
green=col2rgb(V1)[2],
blue=col2rgb(V1)[3]) %>%
#split the file into "source","day", and "strip"
dplyr::mutate(source=gsub("_s.*","",file)) %>%
dplyr::mutate(source=gsub(".*_","",source)) %>%
dplyr::mutate(day=gsub("_.*","",file)) %>%
dplyr::mutate(day=as.numeric(gsub("day","",day))) %>%
dplyr::mutate(strip=gsub(".*_","",file)) %>%
dplyr::mutate(strip=gsub("strip","",strip)) %>%
dplyr::mutate(strip=as.numeric(gsub(".txt","",strip))) %>%
dplyr::mutate(rep=day+strip) %>%
#reorder
dplyr::select(source,rep,Material,Unit,red,green,blue)
head(test)
unique(test$rep)
#get the RGB values for the values in a3_tests
test <- a3_tests %>%
#add # to values
dplyr::mutate(V1=paste0("#",V1)) %>%
#get red, green, and blue values
dplyr::rowwise() %>%
dplyr::mutate(red=col2rgb(V1)[1],
green=col2rgb(V1)[2],
blue=col2rgb(V1)[3]) %>%
#split the file into "source","day", and "strip"
dplyr::mutate(source=gsub("_s.*","",file)) %>%
dplyr::mutate(source=gsub(".*_","",source)) %>%
dplyr::mutate(day=gsub("_.*","",file)) %>%
dplyr::mutate(day=as.numeric(gsub("day","",day))) %>%
dplyr::mutate(strip=gsub(".*_","",file)) %>%
dplyr::mutate(strip=gsub("strip","",strip)) %>%
dplyr::mutate(strip=as.numeric(gsub(".txt","",strip))) %>%
dplyr::mutate(rep=paste(day,strip,sep="_")) %>%
#reorder
dplyr::select(source,rep,Material,Unit,red,green,blue)
head(test)
unique(test$rep)
test %>% rep=="3_12"
test %>% filter(rep=="3_12")
head(a3_tests)
a3_tests %>% filter(file=="day3_filtered_.*")
a3_tests %>% filter(grepl("filtered",file()))
a3_tests %>% filter(grepl("filtered",file)
)
a3_tests %>% filter(grepl("_filtered",file))
test2 <- a3_tests %>% filter(grepl("_filtered",file))
test2
unique(test2$file)
##GET RGB FILES OF DATA
#list all rgb files of data
rgblist <- list.files(path="C:/Users/drewj/OneDrive/R_based_work/water_quality/rgb_values/",pattern="day.*txt")
#read in all rgblist
in_rgbfiles <- lapply(rgblist,function(x){
#print filename
print(x)
#read in file
tempdf <- read.table(file=paste0("C:/Users/drewj/OneDrive/R_based_work/water_quality/rgb_values/",x),header=FALSE,stringsAsFactors = FALSE,sep="\t",fill=TRUE)
#add filename to column and rownames as a new column
tempdf <- tempdf %>%
dplyr::mutate(file=x) %>%
tibble::rownames_to_column("id")
})
#remove rgblist
rm(rgblist)
in_layout_tests <- tibble::rownames_to_column(in_layout_tests,"id")
#tests, incorporate layout
a2_tests <- lapply(in_rgbfiles,function(x){
#print head
print(head(x,n=1))
#left_join x and in_layout_chart by id
tempdf <- left_join(x=x,y=in_layout_tests,by="id")
#return tempdf
return(tempdf)
})
a3_tests <- bind_rows(a2_tests)
#get the RGB values for the values in a3_tests
test <- a3_tests %>%
#add # to values
dplyr::mutate(V1=paste0("#",V1)) %>%
#get red, green, and blue values
dplyr::rowwise() %>%
dplyr::mutate(red=col2rgb(V1)[1],
green=col2rgb(V1)[2],
blue=col2rgb(V1)[3]) %>%
#split the file into "source","day", and "strip"
dplyr::mutate(source=gsub("_s.*","",file)) %>%
dplyr::mutate(source=gsub(".*_","",source)) %>%
dplyr::mutate(day=gsub("_.*","",file)) %>%
dplyr::mutate(day=as.numeric(gsub("day","",day))) %>%
dplyr::mutate(strip=gsub(".*_","",file)) %>%
dplyr::mutate(strip=gsub("strip","",strip)) %>%
dplyr::mutate(strip=as.numeric(gsub(".txt","",strip))) %>%
dplyr::mutate(rep=paste(day,strip,sep="_")) %>%
#reorder
dplyr::select(source,rep,Material,Unit,red,green,blue)
head(test)
unique(test$day)
#get the RGB values for the values in a3_tests
test <- a3_tests %>%
#add # to values
dplyr::mutate(V1=paste0("#",V1)) %>%
#get red, green, and blue values
dplyr::rowwise() %>%
dplyr::mutate(red=col2rgb(V1)[1],
green=col2rgb(V1)[2],
blue=col2rgb(V1)[3]) %>%
#split the file into "source","day", and "strip"
dplyr::mutate(source=gsub("_s.*","",file)) %>%
dplyr::mutate(source=gsub(".*_","",source)) %>%
dplyr::mutate(day=gsub("_.*","",file)) %>%
dplyr::mutate(day=as.numeric(gsub("day","",day))) %>%
dplyr::mutate(strip=gsub(".*_","",file)) %>%
dplyr::mutate(strip=gsub("strip","",strip)) %>%
dplyr::mutate(strip=as.numeric(gsub(".txt","",strip))) %>%
dplyr::mutate(rep=paste(day,strip,sep="_"))
head(test)
unique(test$day)
#get the RGB values for the values in a3_tests
test <- a3_tests %>%
#add # to values
dplyr::mutate(V1=paste0("#",V1)) %>%
#get red, green, and blue values
dplyr::rowwise() %>%
dplyr::mutate(red=col2rgb(V1)[1],
green=col2rgb(V1)[2],
blue=col2rgb(V1)[3]) %>%
#split the file into "source","day", and "strip"
dplyr::mutate(source=gsub("_s.*","",file)) %>%
dplyr::mutate(source=gsub(".*_","",source)) %>%
dplyr::mutate(day=gsub("_.*","",file)) %>%
dplyr::mutate(day=as.numeric(gsub("day","",day))) %>%
dplyr::mutate(strip=gsub(".*_","",file)) %>%
dplyr::mutate(strip=gsub("strip","",strip)) %>%
dplyr::mutate(strip=as.numeric(gsub(".txt","",strip))) %>%
dplyr::mutate(rep=paste(day,strip,sep="_")) %>%
#reorder
dplyr::select(source,rep,Material,Unit,red,green,blue)
unique(test$rep)
#get the RGB values for the values in a3_tests
a3_tests <- a3_tests %>%
#add # to values
dplyr::mutate(V1=paste0("#",V1)) %>%
#get red, green, and blue values
dplyr::rowwise() %>%
dplyr::mutate(red=col2rgb(V1)[1],
green=col2rgb(V1)[2],
blue=col2rgb(V1)[3]) %>%
#split the file into "source","day", and "strip"
dplyr::mutate(source=gsub("_s.*","",file)) %>%
dplyr::mutate(source=gsub(".*_","",source)) %>%
dplyr::mutate(day=gsub("_.*","",file)) %>%
dplyr::mutate(day=as.numeric(gsub("day","",day))) %>%
dplyr::mutate(strip=gsub(".*_","",file)) %>%
dplyr::mutate(strip=gsub("strip","",strip)) %>%
dplyr::mutate(strip=as.numeric(gsub(".txt","",strip))) %>%
dplyr::mutate(rep=paste(day,strip,sep="_")) %>%
#reorder
dplyr::select(source,rep,Material,Unit,red,green,blue)
head(a3_tests)
in1 <- read.table("clipboard",sep="\t",header=TRUE,stringsAsFactors = FALSE,fill=TRUE)
head(in1)
library(dplyr)
library(ggplot2)
library(lubridate)
#format
LJIM <- in1 %>% select(ETF,Date,Adj.Close)
VTI <- in1 %>% select(ETF.1,Date.1,Adj.Close.1) %>% rename("ETF"="ETF.1","Date"="Date.1","Adj.Close"="Adj.Close.1")
VOO <- in1 %>% select(ETF.2,Date.2,Adj.Close.2) %>% rename("ETF"="ETF.2","Date"="Date.2","Adj.Close"="Adj.Close.2")
VT <- in1 %>% select(ETF.3,Date.3,Adj.Close.3) %>% rename("ETF"="ETF.3","Date"="Date.3","Adj.Close"="Adj.Close.3")
all <- rbind(LJIM,VTI,VOO,VT)
head(all)
all$Date <- lubridate::mdy(all$Date)
install.packages("lubridate")
library(lubridate)
all$Date <- lubridate::mdy(all$Date)
#graph
ggplot(all %>%
filter(Date> '2023/3/2'))+
geom_point(aes(x=Date,y=Adj.Close,color=ETF))
#calculate % change for each ETF
tempdf1 <- all %>%
filter(Date>='2023/3/2') %>%
group_by(ETF) %>%
mutate(startprice=Adj.Close[Date=='2023/3/2']) %>%
ungroup() %>%
mutate(perc_change=(Adj.Close-startprice)/startprice)
head(tempdf1)
#graph
ggplot(tempdf1 %>%
filter(ETF!="VT" & ETF!="VTI"))+
geom_point(aes(x=Date,y=perc_change,color=ETF))+
geom_line(aes(x=Date,y=perc_change,color=ETF,group=ETF))
#calculate correlation
tempdf2 <- tempdf1 %>%
tidyr::pivot_wider(id_cols=Date,names_from=ETF,values_from=perc_change)
head(tempdf2)
#graph
ggplot(tempdf2)+
geom_point(aes(x=LJIM,y=VOO))+
geom_abline(slope=1,intercept=0)
summary(lm(tempdf2$LJIM~tempdf2$VOO,tempdf2))
head(tempdf1)
rm(tempdf1,tempdf2)
head(all)
all$Date - 1
View(all)
test <- all %>% filter(Date>='2023/3/2')
View(test)
rm(test)
head(all)
#calculate % change day over day
tempdf1 <- all %>%
#filter for desired date range
filter(Date>='2023/3/2') %>%
#group by ETF, calculate % change day over day
group_by(ETF) %>%
mutate(perc_change_perday=ifelse(Date=='2023/3/2',0,(Adj.Close-Adj.Close[Date==Date-1])/Adj.Close[Date==Date-1]))
head(tempdf1)
#calculate % change day over day
tempdf1 <- all %>%
#filter for desired date range
filter(Date>='2023/3/2') %>%
#group by ETF, calculate % change day over day
group_by(ETF) %>%
mutate(perc_change_perday=ifelse(Date=='2023/3/2',0,(Adj.Close-lag(Adj.Close))/lag(Adj.Close)))
head(tempdf1)
25.3-25.6
-0.3/25.6
#graph
ggplot(tempdf1)+
geom_point(aes(x=Date,y=perc_change_perday,color=ETF))
#graph
ggplot(tempdf1)+
geom_point(aes(x=Date,y=perc_change_perday,color=ETF))+
stat_summary(aes(x=Date,y=perc_change_perday,group=ETF,color=ETF),geom="line")
#pivot wider
tempdf2 <- tempdf1 %>%
tidyr::pivot_wider(id_cols=Date,names_from=ETF,values_from=perc_change_perday)
#graph
ggplot(tempdf2)+
geom_point(aes(x=LJIM,y=VOO))
#graph
ggplot(tempdf2)+
geom_point(aes(x=LJIM,y=VOO))+
geom_abline(intercept=0,slope=1)
#graph
ggplot(tempdf2)+
geom_point(aes(x=LJIM,y=VTI))+
geom_abline(intercept=0,slope=1)
#graph
ggplot(tempdf2)+
geom_point(aes(x=LJIM,y=VT))+
geom_abline(intercept=0,slope=1)
# Example dataframe
df <- data.frame(A = 1:5, B = 6:10)
# Dynamic variable
col_name <- "A"
# Use dynamic variable in mutate
df <- df %>%
mutate(new_column = {{col_name}} * 2)
library(dplyr)
# Example dataframe
df <- data.frame(A = 1:5, B = 6:10)
# Dynamic variable
col_name <- "A"
# Use dynamic variable in mutate
df <- df %>%
mutate(new_column = {{col_name}} * 2)
library(dplyr)
# Example dataframe
df <- data.frame(A = 1:5, B = 6:10)
# Dynamic variable
col_name <- "A"
# Use dynamic variable in mutate with get()
df <- df %>%
mutate(new_column = get(col_name) * 2)
# View the updated dataframe
df
library(dplyr)
# Example dataframe
df <- data.frame(A = 1:5, B = 6:10)
# Dynamic variable
col_name <- "A"
# Use NSE in mutate to create a new column dynamically
df <- df %>%
mutate(new_column = !!sym(col_name) * 2)
# View the updated dataframe
df
#summariz
df %>%
group_by(!!sym(col_name)) %>%
summarize(n=n())
# View the updated dataframe
df
install.packages("nflfastR")
install.packages("nflreadr")
0
#libraries
library(nflfastR)
library(nflreadr)
install.packages("nflfastR")
install.packages("nflfastR")
install.packages("nflfastR")
install.packages("nflfastR")
install.packages("nflfastR")
#setwd to different directory (so we don't store large data files in a github repo)
setwd("C:/Users/drewj/OneDrive/R_based_work/assembling_genome_nonrepo")
#download data to local
x <- curl -L ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR130/025/SRR13070625/SRR13070625_1.fastq.gz -o SRR13070625_Nanopore_sequencing_of_Drosophila_melanogaster_whole_adult_flies_pooled_male_and_female_1.fastq.gz
#setwd to different directory (so we don't store large data files in a github repo)
setwd("C:/Users/drewj/OneDrive/R_based_work/assembling_genome_nonrepo")
#download data to local
x <-
'curl -L ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR130/025/SRR13070625/SRR13070625_1.fastq.gz -o SRR13070625_Nanopore_sequencing_of_Drosophila_melanogaster_whole_adult_flies_pooled_male_and_female_1.fastq.gz'
system(x)
x <-
'curl -L ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR124/080/SRR12473480/SRR12473480_subreads.fastq.gz -o SRR12473480_Drosophila_PacBio_HiFi_UltraLow_subreads.fastq.gz'
system(x)
x <-
'curl -L ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR120/022/SRR12099722/SRR12099722_1.fastq.gz -o SRR12099722_WGS_Drosophila_melanogaster_adult_ISCs_1.fastq.gz'
system(x)
x <-
'curl -L ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR120/022/SRR12099722/SRR12099722_2.fastq.gz -o SRR12099722_WGS_Drosophila_melanogaster_adult_ISCs_2.fastq.gz'
system(x)
x <-
'curl -L ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR119/025/SRR11906525/SRR11906525_subreads.fastq.gz -o SRR11906525_WGS_of_drosophila_melanogaster_female_adult_subreads.fastq.gz'
system(x)
x <-
'curl -L ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR151/042/SRR15130842/SRR15130842_1.fastq.gz -o SRR15130842_GSM5452672_Control_CM2_Drosophila_melanogaster_RNA-Seq_1.fastq.gz'
system(x)
x <-
'curl -L ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR151/042/SRR15130842/SRR15130842_2.fastq.gz -o SRR15130842_GSM5452672_Control_CM2_Drosophila_melanogaster_RNA-Seq_2.fastq.gz'
system(x)
x <-
'curl -L ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR151/041/SRR15130841/SRR15130841_1.fastq.gz -o SRR15130841_GSM5452671_Control_CM1_Drosophila_melanogaster_RNA-Seq_1.fastq.gz'
system(x)
x <-
'curl -L ftp://ftp.sra.ebi.ac.uk/vol1/fastq/SRR151/041/SRR15130841/SRR15130841_2.fastq.gz -o SRR15130841_GSM5452671_Control_CM1_Drosophila_melanogaster_RNA-Seq_2.fastq.gz'
system(x)
x <-
'wget http://ftp.flybase.net/genomes/Drosophila_melanogaster/dmel_r6.44_FB2022_01/fasta/dmel-all-chromosome-r6.44.fasta.gz"'
system(x)
x <-
'wget http://ftp.flybase.net/genomes/Drosophila_melanogaster/dmel_r6.44_FB2022_01/fasta/dmel-all-chromosome-r6.44.fasta.gz'
system(x)
x <-
'curl -L http://ftp.flybase.net/genomes/Drosophila_melanogaster/dmel_r6.44_FB2022_01/fasta/dmel-all-chromosome-r6.44.fasta.gz -o dmel-all-chromosome-r6.44.fasta.gz'
system(x)
#change wdir back to original location
setwd("C:/Users/drewj/OneDrive/R_based_work/assembling_genome")
rm(x)
